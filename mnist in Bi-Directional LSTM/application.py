# coding=utf-8import osos.chdir("../")import tensorflow as tfimport modelfrom tensorflow.examples.tutorials.mnist import input_datamnist = input_data.read_data_sets("MNIST_data", one_hot=True)def predict(model, pred_num, sess):    saver = tf.train.Saver()    correct = 0    for i in range(pred_num):        batch_x, batch_y = mnist.train.next_batch(model.batch_size)        batch_x = batch_x.reshape((model.batch_size, model.steps, model.inputs))        saver.restore(sess, "./mnist in Bi-Directional LSTM/model/model.ckpt")        pred = sess.run(tf.argmax(model.output, 1), feed_dict={model.x: batch_x, model.keep_prob: 1.0})        label = sess.run(tf.argmax(batch_y, 1))        print "Sample %d------\nprediction %s\nreal label %s" % (i + 1, pred, label)        if pred == label:            correct += 1    print "predict accuracy %g" % (correct * 1.0/ pred_num)if __name__ == "__main__":    my_network = model.Bd_LSTM_layer(name="mnist", batch_size=1)    pred_num = 10    init = tf.global_variables_initializer()    with tf.Session() as sess:        predict(my_network, pred_num, sess)